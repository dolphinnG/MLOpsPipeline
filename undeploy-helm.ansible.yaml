---
- name: Uninstall Helm Charts from Kubernetes
  hosts: localhost
  # vars:
  vars_files:
    - vars.ansible.yaml
  tasks:
    - name: Ensure Helm is installed
      ansible.builtin.command: helm version
      register: helm_version
      failed_when: helm_version.rc != 0
      changed_when: false

    - name: Uninstall Helm release
      ansible.builtin.command: helm uninstall {{ item.release }}
      register: helm_uninstall
      changed_when: "'uninstalled' in helm_uninstall.stdout"
      loop: "{{ charts }}"
      loop_control:
        loop_var: item

    - name: Check for seldon pods
      ansible.builtin.command: kubectl get pods --all-namespaces -o json
      register: seldon_pods
      changed_when: false

    - name: Wait for seldon pods to be in desired state
      until: seldon_pods.stdout | from_json | json_query('items[?starts_with(metadata.name, `seldon-`)]') | length == 1
      retries: 10
      delay: 5
      ansible.builtin.command: kubectl get pods --all-namespaces -o json
      register: seldon_pods
      changed_when: false

    - name: Uninstall seldon-core-v2-setup Helm release
      ansible.builtin.command: helm uninstall seldon-core-v2-setup-hehe
      register: seldon_core_v2_setup_uninstall
      until: "'uninstalled' in seldon_core_v2_setup_uninstall.stdout"
      retries: 10
      delay: 5

    - name: Wait for 5 seconds before rechecking seldon pods
      ansible.builtin.pause:
        seconds: 5
      when: seldon_pods.stdout | from_json | json_query('items[?starts_with(metadata.name, `seldon-`)]') | length != 1

    - name: Delete all PersistentVolumeClaims
      ansible.builtin.command: kubectl delete pvc --all
      register: delete_pvc
      changed_when: "'deleted' in delete_pvc.stdout"

    - name: Delete all PersistentVolumes
      ansible.builtin.command: kubectl delete pv --all
      register: delete_pv
      changed_when: "'deleted' in delete_pv.stdout"
