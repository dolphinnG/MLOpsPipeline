apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeconfig-generator-admin
  namespace: dolphin-ns
  labels:
    app.kubernetes.io/managed-by: "Helm"
  annotations:
    meta.helm.sh/release-name: "microservices-hehe"
    meta.helm.sh/release-namespace: "dolphin-ns"

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubeconfig-generator-admin-binding
  labels:
    app.kubernetes.io/managed-by: "Helm"
  annotations:
    meta.helm.sh/release-name: "microservices-hehe"
    meta.helm.sh/release-namespace: "dolphin-ns"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: kubeconfig-generator-admin
  namespace: dolphin-ns

---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: dolphin-launcher
    labels:
        app: dolphin-launcher
spec:
    replicas: 1
    selector:
        matchLabels:
            app: dolphin-launcher
    template:
        metadata:
            labels:
                app: dolphin-launcher
        spec:
            serviceAccountName: kubeconfig-generator-admin
            containers:
                - name: launcher
                  image: "supahakka/launcher:v3"
                  imagePullPolicy: {{ .Values.imagePullPolicy }}
                  env:
                    - name: POD_ID # typo, should have been POD_IP 
                      valueFrom:
                        fieldRef:
                          fieldPath: status.podIP 
                    - name: OTEL_PYTHON_LOG_LEVEL
                      value: "debug"
                    - name: OTEL_EXPORTER_OTLP_ENDPOINT
                      value: "otelcol-deploymentset-hehe-opentelemetry-collector:4317"
                    - name: OTEL_EXPORTER_OTLP_INSECURE
                      value: "true"
                    - name: OTEL_SERVICE_NAME
                      value: "dolphin-launcher-service"
                    - name: OTEL_METRICS_EXPORTER
                      value: "otlp"
                    - name: OTEL_TRACES_EXPORTER
                      value: "otlp"
                    - name: OTEL_LOGS_EXPORTER
                      value: "otlp,console"
                    - name: OTEL_PYTHON_LOG_CORRELATION
                      value: "true"
                    - name: OTEL_PYTHON_LOGGING_AUTO_INSTRUMENTATION_ENABLED
                      value: "true"
                    - name: IS_ON_K8S
                      value: "true"
                  ports:
                      - containerPort: 15003
                  livenessProbe:
                    httpGet:
                      scheme: HTTPS
                      path: /liveness
                      port: 15003
                    initialDelaySeconds: 30
                    periodSeconds: 10
                  readinessProbe:
                    httpGet:
                      scheme: HTTPS
                      path: /readiness
                      port: 15003
                    initialDelaySeconds: 30
                    periodSeconds: 10
                  startupProbe:
                    httpGet:
                      scheme: HTTPS
                      path: /health
                      port: 15003
                    initialDelaySeconds: 30
                    periodSeconds: 10
                    failureThreshold: 10
                  volumeMounts:
                      - name: nfs-volume
                        mountPath: /opt/bitnami/spark/tmp
                      - name: config-volume
                        mountPath: /app/env/
                      - name: tls-secret
                        mountPath: /app/certs/
                      #   subPath: tls.crt
                      # - name: tls-secret
                      #   mountPath: /app/
                      #   subPath: tls.key
                      # - name: tls-secret
                      #   mountPath: /app/
                      #   subPath: ca.crt
            volumes:
              - name: nfs-volume
                persistentVolumeClaim:
                  claimName: nfs-pvc
              - name: config-volume
                configMap:
                  name: dolphin-microservices-config
                  # items:
                  #   - key: .env
                  #     path: .env
              - name: tls-secret
                secret:
                    secretName: dolphin-launcher-tls-secret
---
apiVersion: v1
kind: Service
metadata:
  name: dolphin-launcher-service
  labels:
    app: dolphin-launcher
spec:
  selector:
    app: dolphin-launcher
  ports:
    - protocol: TCP
      port: 15003
      targetPort: 15003