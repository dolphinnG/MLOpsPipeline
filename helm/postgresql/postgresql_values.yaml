fullnameOverride: postgresql-dolphin-service

primary: 

  # extraEnvVars:
  # - name: PGSSLMODE # https://github.com/bitnami/charts/issues/8122
  #   value: disable # set this to disable ssl for health check, otherwise health check keeps using tls client auth and fails with red FATA logs line

  initdb: 
    user: postgres
    password: adminpassword
    scripts: 
      my_init_script.sql: |
        CREATE DATABASE bitnami_keycloak;
        CREATE USER bn_keycloak WITH PASSWORD 'supahakka';
        GRANT ALL PRIVILEGES ON DATABASE bitnami_keycloak TO bn_keycloak;
        \c bitnami_keycloak
        GRANT ALL PRIVILEGES ON SCHEMA public TO bn_keycloak;

        CREATE DATABASE mlflow;
        CREATE USER mlflow_db_user WITH PASSWORD 'mlflow_db_password';
        GRANT ALL PRIVILEGES ON DATABASE mlflow TO mlflow_db_user;
        \c mlflow
        GRANT ALL PRIVILEGES ON SCHEMA public TO mlflow_db_user;

        CREATE DATABASE mlflow_auth;
        GRANT ALL PRIVILEGES ON DATABASE mlflow_auth TO mlflow_db_user;
        \c mlflow_auth
        GRANT ALL PRIVILEGES ON SCHEMA public TO mlflow_db_user;

        CREATE DATABASE bitnami_airflow;
        CREATE USER bn_airflow WITH PASSWORD 'bn_airflow_password';
        GRANT ALL PRIVILEGES ON DATABASE bitnami_airflow TO bn_airflow;
        \c bitnami_airflow
        GRANT ALL PRIVILEGES ON SCHEMA public TO bn_airflow;
  persistence: 
    enabled: false # TODO: change this later

image: 
  debug: true

auth:
  enablePostgresUser: true
  postgresPassword: adminpassword

  

# postgresql bitnami tls is kinda broken, so skip this for now. If use this, check out the extraenvs above in the primary section
# volumePermissions:
#   enabled: true
# tls: 
#   enabled: true 
#   autoGenerated: false
#   preferServerCiphers: false
#   certificatesSecret: postgresql-tls-secret
#   certFilename: "tls.crt"
#   certKeyFilename: "tls.key"
#   certCAFilename: "ca.crt"


