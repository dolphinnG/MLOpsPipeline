

services:

  ############## USE THE POSTGRESQL OF THE KEYCLOAK-LDAP DOCKER-COMPOSE ##############
  # postgresql:
  #   image: docker.io/bitnami/postgresql:17
  #   # volumes:
  #   #   - 'postgresql_data:/bitnami/postgresql'
  #   environment:
  #     - POSTGRESQL_DATABASE=bitnami_airflow
  #     - POSTGRESQL_USERNAME=bn_keycloak
  #     - POSTGRESQL_PASSWORD=admin
  #     # ALLOW_EMPTY_PASSWORD is recommended only for development.
  #     - ALLOW_EMPTY_PASSWORD=yes

  #   networks:
  #     - shared_network

  ###################### USE THE REDIS OF THEKEYCLOAK-LDAP DOCKER-COMPOSE ######################
  # redis:
  #   image: docker.io/bitnami/redis:7.4
  #   # volumes:
  #   #   - 'redis_data:/bitnami'
  #   environment:
  #     # ALLOW_EMPTY_PASSWORD is recommended only for development.
  #     - ALLOW_EMPTY_PASSWORD=yes
  #   networks:
  #     - shared_network

  airflow-scheduler:
    image: docker.io/bitnami/airflow:2
    environment:
      - AIRFLOW_COMPONENT_TYPE=scheduler
      - AIRFLOW_DATABASE_NAME=bitnami_airflow
      - AIRFLOW_DATABASE_USERNAME=bn_keycloak
      - AIRFLOW_DATABASE_PASSWORD=admin
      - AIRFLOW_EXECUTOR=CeleryExecutor
      - AIRFLOW_WEBSERVER_HOST=airflow
    networks:
      - shared_network

  airflow-worker:
    image: docker.io/bitnami/airflow:2
    environment:
      - AIRFLOW_COMPONENT_TYPE=worker
      - AIRFLOW_DATABASE_NAME=bitnami_airflow
      - AIRFLOW_DATABASE_USERNAME=bn_keycloak
      - AIRFLOW_DATABASE_PASSWORD=admin
      - AIRFLOW_EXECUTOR=CeleryExecutor
      - AIRFLOW_WEBSERVER_HOST=airflow
    networks:
      - shared_network

  airflow:
    image: docker.io/bitnami/airflow:2
    environment:
      - AIRFLOW_DATABASE_NAME=bitnami_airflow
      - AIRFLOW_DATABASE_USERNAME=bn_keycloak
      - AIRFLOW_DATABASE_PASSWORD=admin
      - AIRFLOW_EXECUTOR=CeleryExecutor
      - AIRFLOW__API__AUTH_BACKENDS=airflow.api.auth.backend.basic_auth
      - AIRFLOW__WEBSERVER__WEB_SERVER_SSL_CERT=/certs/dolphin.rootCA.crt
      - AIRFLOW__WEBSERVER__WEB_SERVER_SSL_KEY=/certs/dolphin.rootCA.key
    volumes:
      - ./certs:/certs
    ports:
      - '28080:8080'
    networks:
      - shared_network

# volumes:
#   postgresql_data:
#   redis_data:

networks:
  shared_network:
    external: true
